import { Android, Cache, Ios, Platform } from '@expo/eas-build-job';
export declare enum CredentialsSource {
    LOCAL = "local",
    REMOTE = "remote"
}
export declare enum ResourceClass {
    DEFAULT = "default",
    LARGE = "large",
    /**
     * @deprecated use M1_MEDIUM instead
     * @experimental
     * This resource class is not yet ready to be used in production. For testing purposes only. Might be deprecated / deleted at any time.
     */
    M1_EXPERIMENTAL = "m1-experimental",
    M1_MEDIUM = "m1-medium",
    M1_LARGE = "m1-large",
    INTEL_MEDIUM = "intel-medium",
    MEDIUM = "medium"
}
export type DistributionType = 'store' | 'internal';
export type IosEnterpriseProvisioning = 'adhoc' | 'universal';
export type VersionAutoIncrement = boolean | 'version';
export type IosVersionAutoIncrement = VersionAutoIncrement | 'buildNumber';
export type AndroidVersionAutoIncrement = VersionAutoIncrement | 'versionCode';
export interface CommonBuildProfile {
    resourceClass?: ResourceClass;
    env?: Record<string, string>;
    node?: string;
    yarn?: string;
    expoCli?: string;
    credentialsSource: CredentialsSource;
    distribution: DistributionType;
    releaseChannel?: string;
    channel?: string;
    developmentClient?: boolean;
    prebuildCommand?: string;
    autoIncrement?: boolean;
    buildArtifactPaths?: string[];
    cache?: Omit<Cache, 'clear'>;
    config?: string;
}
interface PlatformBuildProfile extends Omit<CommonBuildProfile, 'autoIncrement'> {
    /**
     * @deprecated use applicationArchivePath
     */
    artifactPath?: string;
    applicationArchivePath?: string;
}
export interface AndroidBuildProfile extends PlatformBuildProfile {
    image?: Android.BuilderEnvironment['image'];
    ndk?: string;
    withoutCredentials?: boolean;
    gradleCommand?: string;
    buildType?: Android.BuildType.APK | Android.BuildType.APP_BUNDLE;
    autoIncrement?: AndroidVersionAutoIncrement;
}
export interface IosBuildProfile extends PlatformBuildProfile {
    image?: Ios.BuilderEnvironment['image'];
    bundler?: string;
    fastlane?: string;
    cocoapods?: string;
    enterpriseProvisioning?: IosEnterpriseProvisioning;
    simulator?: boolean;
    scheme?: string;
    buildConfiguration?: string;
    autoIncrement?: IosVersionAutoIncrement;
}
export type BuildProfile<TPlatform extends Platform = Platform> = TPlatform extends Platform.ANDROID ? AndroidBuildProfile : IosBuildProfile;
export interface EasJsonBuildProfile extends Partial<CommonBuildProfile> {
    extends?: string;
    [Platform.ANDROID]?: Partial<AndroidBuildProfile>;
    [Platform.IOS]?: Partial<IosBuildProfile>;
}
export {};
