import Joi from 'joi';
import { ArchiveSource, Env, Platform, Workflow, Cache, EnvironmentSecret, BuildTrigger, BuildMode } from './common';
export declare type DistributionType = 'store' | 'internal' | 'simulator';
export interface TargetCredentials {
    provisioningProfileBase64: string;
    distributionCertificate: DistributionCertificate;
}
declare type Target = string;
export declare type BuildCredentials = Record<Target, TargetCredentials>;
export interface DistributionCertificate {
    dataBase64: string;
    password: string;
}
export interface BuilderEnvironment {
    image?: string;
    node?: string;
    yarn?: string;
    expoCli?: string;
    bundler?: string;
    fastlane?: string;
    cocoapods?: string;
    env?: Env;
}
export interface Job {
    mode: BuildMode;
    type: Workflow;
    triggeredBy: BuildTrigger;
    projectArchive: ArchiveSource;
    resign?: {
        applicationArchiveSource: ArchiveSource;
    };
    platform: Platform.IOS;
    projectRootDirectory?: string;
    buildProfile?: string;
    releaseChannel?: string;
    updates?: {
        channel?: string;
    };
    secrets: {
        buildCredentials?: BuildCredentials;
        environmentSecrets?: EnvironmentSecret[];
        robotAccessToken?: string;
    };
    builderEnvironment?: BuilderEnvironment;
    cache: Cache;
    developmentClient?: boolean;
    simulator?: boolean;
    version?: {
        buildNumber?: string;
        /**
         * support for this field is implemented, but specifying it is disabled on schema level
         */
        appVersion?: string;
        /**
         * support for this field is implemented, but specifying it is disabled on schema level
         */
        runtimeVersion?: string;
    };
    buildArtifactPaths?: string[];
    scheme?: string;
    buildConfiguration?: string;
    applicationArchivePath?: string;
    username?: string;
    experimental?: {
        prebuildCommand?: string;
    };
}
export declare const JobSchema: Joi.ObjectSchema<any>;
export {};
