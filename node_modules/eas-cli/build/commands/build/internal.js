"use strict";
var _a;
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
const core_1 = require("@oclif/core");
const _1 = require(".");
const local_1 = require("../../build/local");
const runBuildAndSubmit_1 = require("../../build/runBuildAndSubmit");
const EasCommand_1 = tslib_1.__importDefault(require("../../commandUtils/EasCommand"));
const json_1 = require("../../utils/json");
/**
 * This command will be run on the EAS Build workers, when building
 * directly from git. This command resolves credentials and other
 * build configuration, that normally would be included in the
 * job and metadata objects, and prints them to stdout.
 */
class BuildInternal extends EasCommand_1.default {
    async runAsync() {
        const { flags } = await this.parse(BuildInternal);
        // This command is always run with implicit --non-interactive and --json options
        (0, json_1.enableJsonOutput)();
        const { loggedIn: { actor, graphqlClient }, getDynamicProjectConfigAsync, projectDir, analytics, } = await this.getContextAsync(BuildInternal, {
            nonInteractive: true,
        });
        await (0, _1.handleDeprecatedEasJsonAsync)(projectDir, flags.nonInteractive);
        await (0, runBuildAndSubmit_1.runBuildAndSubmitAsync)(graphqlClient, analytics, projectDir, {
            requestedPlatform: flags.platform,
            profile: flags.profile,
            nonInteractive: true,
            wait: false,
            clearCache: false,
            json: true,
            autoSubmit: false,
            localBuildOptions: {
                localBuildMode: local_1.LocalBuildMode.INTERNAL,
            },
        }, actor, getDynamicProjectConfigAsync);
    }
}
exports.default = BuildInternal;
_a = BuildInternal;
BuildInternal.hidden = true;
BuildInternal.flags = {
    platform: core_1.Flags.enum({
        char: 'p',
        options: ['android', 'ios'],
        required: true,
    }),
    profile: core_1.Flags.string({
        char: 'e',
        description: 'Name of the build profile from eas.json. Defaults to "production" if defined in eas.json.',
        helpValue: 'PROFILE_NAME',
    }),
};
BuildInternal.contextDefinition = {
    ..._a.ContextOptions.LoggedIn,
    ..._a.ContextOptions.DynamicProjectConfig,
    ..._a.ContextOptions.ProjectDir,
    ..._a.ContextOptions.Analytics,
};
