import { ResourceClass } from '@expo/eas-json';
import EasCommand from '../../commandUtils/EasCommand';
export default class Build extends EasCommand {
    static description: string;
    static flags: {
        json: import("@oclif/core/lib/interfaces").BooleanFlag<boolean>;
        'non-interactive': import("@oclif/core/lib/interfaces").BooleanFlag<boolean>;
        platform: import("@oclif/core/lib/interfaces").OptionFlag<string | undefined>;
        'skip-credentials-check': import("@oclif/core/lib/interfaces").BooleanFlag<boolean>;
        'skip-project-configuration': import("@oclif/core/lib/interfaces").BooleanFlag<boolean>;
        profile: import("@oclif/core/lib/interfaces").OptionFlag<string | undefined>;
        local: import("@oclif/core/lib/interfaces").BooleanFlag<boolean>;
        output: import("@oclif/core/lib/interfaces").OptionFlag<string | undefined>;
        wait: import("@oclif/core/lib/interfaces").BooleanFlag<boolean>;
        'clear-cache': import("@oclif/core/lib/interfaces").BooleanFlag<boolean>;
        'auto-submit': import("@oclif/core/lib/interfaces").BooleanFlag<boolean>;
        'auto-submit-with-profile': import("@oclif/core/lib/interfaces").OptionFlag<string | undefined>;
        'resource-class': import("@oclif/core/lib/interfaces").OptionFlag<ResourceClass | undefined>;
        message: import("@oclif/core/lib/interfaces").OptionFlag<string | undefined>;
    };
    static contextDefinition: {
        analytics: import("../../commandUtils/context/AnalyticsContextField").default;
        projectDir: import("../../commandUtils/context/ProjectDirContextField").default;
        getDynamicProjectConfigAsync: import("../../commandUtils/context/DynamicProjectConfigContextField").DynamicProjectConfigContextField;
        loggedIn: import("../../commandUtils/context/LoggedInContextField").default;
    };
    runAsync(): Promise<void>;
    private sanitizeFlags;
    private ensurePlatformSelectedAsync;
}
export declare function handleDeprecatedEasJsonAsync(projectDir: string, nonInteractive: boolean): Promise<void>;
