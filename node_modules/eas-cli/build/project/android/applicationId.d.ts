import { ExpoConfig } from '@expo/config';
import { ExpoGraphqlClient } from '../../commandUtils/context/contextUtils/createGraphqlClient';
import { GradleBuildContext } from './gradle';
export declare const INVALID_APPLICATION_ID_MESSAGE = "Invalid format of Android applicationId. Only alphanumeric characters, '.' and '_' are allowed, and each '.' must be followed by a letter.";
export declare function ensureApplicationIdIsDefinedForManagedProjectAsync({ graphqlClient, projectDir, projectId, exp, }: {
    graphqlClient: ExpoGraphqlClient;
    projectDir: string;
    projectId: string;
    exp: ExpoConfig;
}): Promise<string>;
export declare class AmbiguousApplicationIdError extends Error {
    constructor(message?: string);
}
export declare function getApplicationIdFromBareAsync(projectDir: string, gradleContext?: GradleBuildContext): Promise<string>;
export declare function getApplicationIdAsync(projectDir: string, exp: ExpoConfig, gradleContext?: GradleBuildContext): Promise<string>;
export declare function isApplicationIdValid(applicationId: string): boolean;
export declare function warnIfAndroidPackageDefinedInAppConfigForBareWorkflowProject(projectDir: string, exp: ExpoConfig): void;
