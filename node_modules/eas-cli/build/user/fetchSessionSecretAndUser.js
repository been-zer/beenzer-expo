"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.fetchSessionSecretAndUserAsync = void 0;
const tslib_1 = require("tslib");
const graphql_tag_1 = tslib_1.__importDefault(require("graphql-tag"));
const api_1 = require("../api");
const createGraphqlClient_1 = require("../commandUtils/context/contextUtils/createGraphqlClient");
async function fetchSessionSecretAndUserAsync({ username, password, otp, }) {
    // this is a logged-out endpoint
    const apiV2Client = new api_1.ApiV2Client({
        accessToken: null,
        sessionSecret: null,
    });
    const body = await apiV2Client.postAsync('auth/loginAsync', {
        body: { username, password, otp },
    });
    const { sessionSecret } = body.data;
    const graphqlClient = (0, createGraphqlClient_1.createGraphqlClient)({ accessToken: null, sessionSecret: null });
    const result = await graphqlClient
        .query((0, graphql_tag_1.default) `
        query UserQuery {
          viewer {
            id
            username
          }
        }
      `, {}, {
        fetchOptions: {
            headers: {
                'expo-session': sessionSecret,
            },
        },
        additionalTypenames: [] /* UserQuery has immutable fields */,
    })
        .toPromise();
    const { data } = result;
    return {
        sessionSecret,
        id: data.viewer.id,
        username: data.viewer.username,
    };
}
exports.fetchSessionSecretAndUserAsync = fetchSessionSecretAndUserAsync;
