Object.defineProperty(exports,"__esModule",{value:!0});var r=require("wonka"),e=require("@urql/core");exports.retryExchange=({initialDelayMs:t,maxDelayMs:o,randomDelay:n,maxNumberAttempts:a,retryIf:i,retryWith:u})=>{const y=t||1e3,c=o||15e3,s=a||2,l=void 0===n||!!n;return({forward:t})=>o=>{const n=r.share(o),{source:a,next:d}=r.makeSubject(),m=r.mergeMap((t=>{const{key:o,context:a}=t,i=(a.retryCount||0)+1;let u=a.retryDelay||y;const s=Math.random()+1.5;l&&u*s<c&&(u*=s);const d=r.filter((r=>("query"===r.kind||"teardown"===r.kind)&&r.key===o))(n);return r.takeUntil(d)(r.debounce((()=>u))(r.fromValue(e.makeOperation(t.kind,t,{...t.context,retryDelay:u,retryCount:i}))))}))(a);return r.filter((r=>{if(!r.error||!(i?i(r.error,r.operation):u||r.error.networkError))return!0;if(!((r.operation.context.retryCount||0)>=s-1)){const e=u?u(r.error,r.operation):r.operation;return!e||(d(e),!1)}return!0}))(r.share(t(r.merge([n,m]))))}};
//# sourceMappingURL=urql-exchange-retry.min.js.map
